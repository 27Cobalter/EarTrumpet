<Application x:Class="EarTrumpet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Event="clr-namespace:EarTrumpet.Extensions.EventBinding"
             xmlns:Theme="clr-namespace:EarTrumpet.UI.Themes"
             xmlns:bcl="clr-namespace:System;assembly=mscorlib"
             xmlns:conv="clr-namespace:EarTrumpet.UI.Converters"
             xmlns:resx="clr-namespace:EarTrumpet.Properties"
             xmlns:ui="clr-namespace:EarTrumpet.UI"
             xmlns:views="clr-namespace:EarTrumpet.UI.Views"
             xmlns:vm="clr-namespace:EarTrumpet.UI.ViewModels"
             xmlns:win="clr-namespace:System.Windows;assembly=PresentationFramework"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <Theme:Manager x:Key="ThemeManager">
                <Theme:Manager.References>
                    <Theme:Ref Key="Text" Value="Theme=ApplicationText{Theme}Theme, HighContrast=WindowText" />
                    <Theme:Ref Key="GrayText" Value="Light=LightSecondaryText, Dark=LightDisabledText" />
                    <!--  TODO: Restore prior background colour customisation. #FF222222  -->
                    <Theme:Ref Key="Background" Value="Theme=ApplicationBackground{Theme}Theme, HighContrast=Window" />
                    <Theme:Ref Key="AcrylicBackgroundFallback" Value="Light=LightAcrylicWindowBackdropFallback, Dark=DarkAcrylicWindowBackdropFallback/1" />
                    <Theme:Ref Key="AcrylicBackground">
                        <Theme:Ref.Rules>
                            <Theme:Rule On="LightTheme">
                                <Theme:Rule.Rules>
                                    <Theme:Rule On="Transparency" Value="LightChromeWhite/0.7" />
                                    <Theme:Rule Value="LightAcrylicWindowBackdropFallback/1" />
                                </Theme:Rule.Rules>
                            </Theme:Rule>
                            <Theme:Rule Value="DarkAcrylicWindowBackdropFallback/0.6/1" />
                        </Theme:Ref.Rules>
                    </Theme:Ref>
                    <Theme:Ref Key="FlyoutBackground">
                        <Theme:Ref.Rules>
                            <Theme:Rule On="HighContrast" Value="Window" />
                            <Theme:Rule On="UseAccentColor">
                                <Theme:Rule.Rules>
                                    <Theme:Rule On="Transparency" Value="Theme=SystemAccent{Theme}2" />
                                    <Theme:Rule Value="Theme=SystemAccent{Theme}1" />
                                </Theme:Rule.Rules>
                            </Theme:Rule>
                            <Theme:Rule Value="Theme={Theme}ChromeLow" />
                        </Theme:Ref.Rules>
                    </Theme:Ref>
                    <Theme:Ref Key="ActiveWindowBorder">
                        <Theme:Ref.Rules>
                            <Theme:Rule On="UseAccentColorOnWindowBorders" Value="SystemAccent" />
                            <Theme:Rule Value="Theme={Theme}ChromeDisabledLow" />
                        </Theme:Ref.Rules>
                    </Theme:Ref>
                </Theme:Manager.References>
            </Theme:Manager>

            <ui:MenuItemTemplateSelector x:Key="MenuSelector" />

            <conv:InvertableVisibilityConverter x:Key="visConverter" />
            <conv:IconConverter x:Key="iconConverter" />
            <conv:OpacityConverter x:Key="opacityConverter"
                                   FalseOpacity="1.0"
                                   TrueOpacity="0.4" />

            <Thickness x:Key="PopupBorderThickness">1</Thickness>
            <bcl:Double x:Key="WindowBlurRadius">10</bcl:Double>
            <bcl:Double x:Key="WindowAndItemSize">360</bcl:Double>
            <bcl:Double x:Key="DeviceIconSize">24</bcl:Double>
            <bcl:Double x:Key="AppIconSize">24</bcl:Double>
            <win:GridLength x:Key="IconCellWidth">65</win:GridLength>
            <win:GridLength x:Key="VolumeCellWidth">63</win:GridLength>
            <bcl:Double x:Key="DeviceTitleCellHeight">44</bcl:Double>
            <bcl:Double x:Key="AppItemCellHeight">44</bcl:Double>
            <bcl:Double x:Key="DeviceItemCellHeight">54</bcl:Double>
            <bcl:Double x:Key="AppVolumeTextFontSize">18</bcl:Double>
            <bcl:Double x:Key="DeviceVolumeTextFontSize">24</bcl:Double>
            <bcl:Double x:Key="LargeWindowTextFontSize">15</bcl:Double>
            <Thickness x:Key="WindowMargin">12,0,12,0</Thickness>
            <Thickness x:Key="VolumeAppListMargin">0,6,0,6</Thickness>
            <Thickness x:Key="DeviceOrAppIconMargin">5,0,0,0</Thickness>
            <Thickness x:Key="VolumeTextMargin">-1,0,0,0</Thickness>
            <bcl:Double x:Key="NoItemsPaneHeight">50</bcl:Double>
            <Thickness x:Key="NoItemsPaneMargin">0,8</Thickness>
            <bcl:Double x:Key="SliderThumbWidth">8</bcl:Double>

            <Style x:Key="Windows10FocusVisualStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Rectangle Theme:Brush.Stroke="Theme=ApplicationBackground{Theme}Theme, HighContrast=Window" StrokeThickness="3" />
                                <Rectangle Theme:Brush.Stroke="Text" StrokeThickness="2" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LargeWindows10FocusVisualStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Margin="-3" SnapsToDevicePixels="True">
                                <Rectangle Theme:Brush.Stroke="Theme=ApplicationBackground{Theme}Theme, HighContrast=Window" StrokeThickness="3" />
                                <Rectangle Theme:Brush.Stroke="Text" StrokeThickness="2" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ListView}" TargetType="ListView">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Background="{TemplateBinding Background}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HoverListItemStyle"
                   BasedOn="{StaticResource {x:Type ListViewItem}}"
                   TargetType="{x:Type ListViewItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Theme:Brush.Background" Value="Theme={Theme}ListLow" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupItem}">
                            <StackPanel>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                                <ItemsPresenter Margin="0,0,0,0" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
                <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ChromeMediumLow" />
                <Setter Property="Theme:Brush.Foreground" Value="Theme=ApplicationText{Theme}Theme" />
                <Setter Property="Theme:Brush.BorderBrush" Value="Theme={Theme}ChromeDisabledLow" />
            </Style>
            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontWeight" Value="ExtraLight" />
                <Setter Property="Width" Value="46" />
                <Setter Property="Height" Value="31" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Margin="0,-1,0,0"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter Margin="2"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ListLow, HighContrast=Highlight" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ListMedium, HighContrast=Highlight" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CloseButtonStyle"
                   BasedOn="{StaticResource CaptionButtonStyle}"
                   TargetType="Button">
                <Setter Property="Margin" Value="0,1,0,0" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Theme:Brush.Foreground" Value="Light=SystemText, Dark=ApplicationTextDarkTheme" />
                        <Setter Property="Theme:Brush.Background" Value="#FFE81123" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Theme:Brush.Foreground" Value="Light=Text, Dark=ApplicationTextLightTheme" />
                        <Setter Property="Theme:Brush.Background" Value="#F1707A" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent">
                                <Border Height="2" Background="{TemplateBinding Foreground}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Width" Value="{StaticResource SliderThumbWidth}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="5" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Minimum" Value="0" />
                <Setter Property="Maximum" Value="100" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Interval" Value="1" />
                <Setter Property="Height" Value="32" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="SmallChange" Value="1" />
                <Setter Property="LargeChange" Value="10" />
                <Setter Property="IsManipulationEnabled" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Grid>
                                <Border Name="TrackBackground" Height="2" />

                                <Track Name="PART_Track">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Name="SliderLeft"
                                                      Theme:Brush.Foreground="SystemAccentLight1"
                                                      Command="Slider.DecreaseLarge"
                                                      Style="{StaticResource SliderButtonStyle}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Name="SliderThumb">
                                            <Thumb.Style>
                                                <Style BasedOn="{StaticResource SliderThumbStyle}" TargetType="{x:Type Thumb}">
                                                    <Setter Property="Theme:Brush.Foreground" Value=":Theme=Control{Theme}SliderTrackFillRest, Flyout:Theme=SystemAccent" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Theme:Brush.Foreground" Value="Theme=Control{Theme}SliderThumbHover" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Name="SliderRight"
                                                      Theme:Brush.Foreground=":Theme=Control{Theme}SliderTrackFillDisabled, :HighContrast=ControlLight, Flyout:Theme=#39FFFFFF, Flyout:HighContrast=ControlLight"
                                                      Command="Slider.IncreaseLarge"
                                                      Style="{StaticResource SliderButtonStyle}" />
                                    </Track.IncreaseRepeatButton>
                                </Track>

                                <Border Name="PeakMeter1"
                                        Height="2"
                                        Margin="0,-2,0,0"
                                        HorizontalAlignment="Left"
                                        Theme:Brush.Background="Theme=ApplicationText{Theme}Theme, HighContrast=HotTrack" />

                                <Border Name="PeakMeter2"
                                        Height="2"
                                        Margin="0,1,0,0"
                                        HorizontalAlignment="Left"
                                        Theme:Brush.Background="Theme=ApplicationText{Theme}Theme, HighContrast=HotTrack" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GlyphTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
                <Setter Property="Theme:Brush.Foreground" Value="Light=ApplicationTextLightTheme, Dark=ApplicationTextDarkTheme" />
            </Style>
            <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>
            <Style x:Key="DeviceVolumeTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="{StaticResource VolumeTextMargin}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{StaticResource DeviceVolumeTextFontSize}" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
            </Style>
            <Style x:Key="AppVolumeTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="{StaticResource VolumeTextMargin}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{StaticResource AppVolumeTextFontSize}" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
            </Style>
            <Style x:Key="DeviceTitleTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="{StaticResource LargeWindowTextFontSize}" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
            </Style>
            <Style x:Key="VirtualTitleBarTextStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Margin" Value="{StaticResource WindowMargin}" />
                <Setter Property="FontSize" Value="{StaticResource LargeWindowTextFontSize}" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
            </Style>
            <Style x:Key="VirtualTitleBarButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="{StaticResource DeviceTitleCellHeight}" />
                <Setter Property="Height" Value="{StaticResource DeviceTitleCellHeight}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Background="{TemplateBinding Background}">
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontFamily="Segoe MDL2 Assets"
                                           FontSize="{TemplateBinding FontSize}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{TemplateBinding Tag}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DialogWindowStyle" TargetType="{x:Type Window}">
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="Theme:Brush.Background" Value="Transparent" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Icon" Value="pack://application:,,,/EarTrumpet;component/Assets/Tray.ico" />
                <Setter Property="ShowInTaskbar" Value="True" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CaptionHeight="31" ResizeBorderThickness="4" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Theme:Brush.BorderBrush" Value="ActiveWindowBorder" />
                <Style.Triggers>
                    <Trigger Property="IsActive" Value="False">
                        <Setter Property="Theme:Brush.BorderBrush" Value="Transparent" />
                    </Trigger>

                    <DataTrigger Binding="{Binding Source={StaticResource ThemeManager}, Path=IsSystemLightTheme}">
                        <Setter Property="Icon" Value="pack://application:,,,/EarTrumpet;component/Assets/Application.ico" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="BaseOverlayButton" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="0" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ContextMenu styles & templates  -->
            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="UsesItemContainerTemplate" Value="True" />
                <Setter Property="ItemContainerTemplateSelector" Value="{StaticResource MenuSelector}" />
                <Setter Property="Placement" Value="Mouse" />
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                <Setter Property="MinWidth" Value="311" />
                <Setter Property="HasDropShadow" Value="True" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseHigh, HighContrast=MenuText" />
                <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ChromeMediumLow, HighContrast=Menu" />
                <Setter Property="Theme:Brush.BorderBrush" Value="Light=LightChromeHigh, Dark=ControlDarkAppButtonTextDisabled/0.9, HighContrast=ControlText" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border">
                                <Border Padding="2,8"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" Value="True">
                                    <Setter TargetName="Border" Property="CornerRadius" Value="0" />
                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="Border" Property="Padding" Value="0,0,5,5" />
                                    <Setter TargetName="Border" Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="4"
                                                              Opacity="0.8"
                                                              ShadowDepth="2" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Separator}">
                <Setter Property="Margin" Value="8,2,8,2" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseMediumLow, HighContrast=MenuText" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Rectangle Height="1"
                                       Margin="{TemplateBinding Margin}"
                                       HorizontalAlignment="Stretch"
                                       Fill="{TemplateBinding Foreground}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border"
                                    Height="32"
                                    Background="Transparent"
                                    BorderThickness="0">
                                <Grid Margin="0,-1,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="32" SharedSizeGroup="Icon" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="Check"
                                            Width="14"
                                            Height="14"
                                            BorderThickness="1">
                                        <TextBlock x:Name="CheckMark"
                                                   Theme:Brush.Foreground="Theme={Theme}BaseMedium, HighContrast=MenuText"
                                                   FontFamily="Segoe MDL2 Assets"
                                                   SnapsToDevicePixels="False"
                                                   Text="{TemplateBinding Tag}"
                                                   Visibility="Hidden" />
                                    </Border>
                                    <ContentPresenter x:Name="HeaderHost"
                                                      Grid.Column="1"
                                                      Margin="0,0,8,0"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />

                                    <Border x:Name="OpenGlyph"
                                            Grid.Column="2"
                                            Width="20"
                                            Height="14"
                                            BorderThickness="1"
                                            Visibility="Collapsed">
                                        <TextBlock Theme:Brush.Foreground="Theme={Theme}BaseMedium, HighContrast=MenuText"
                                                   FontFamily="Segoe MDL2 Assets"
                                                   SnapsToDevicePixels="False"
                                                   Text="&#xE0E3;" />
                                    </Border>

                                    <Popup x:Name="Popup"
                                           MinWidth="200"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           HorizontalOffset="-2"
                                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                                           Placement="Right"
                                           PopupAnimation="Fade">

                                        <Border x:Name="SubmenuBorder"
                                                Theme:Brush.Background="Theme={Theme}ChromeMediumLow, HighContrast=Menu"
                                                Theme:Brush.BorderBrush="Theme={Theme}ChromeHigh, HighContrast=ControlText"
                                                BorderThickness="1"
                                                SnapsToDevicePixels="True">
                                            <Border Padding="2,6"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="1">
                                                <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Theme:Brush.Background" Value="Theme={Theme}ListLow, HighContrast=Highlight" />
                                    <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseHigh, HighContrast=HilightText" />
                                    <Setter TargetName="CheckMark" Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseMedium, HighContrast=HilightText" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseMediumLow" />
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter TargetName="OpenGlyph" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="ContextMenuItemTemplate">
                <MenuItem Command="{Binding Command}"
                          Header="{Binding DisplayName}"
                          IsCheckable="{Binding IsChecked}"
                          IsChecked="{Binding IsChecked}"
                          IsEnabled="{Binding IsEnabled}"
                          Tag="{Binding Glyph}" />
            </DataTemplate>
            <HierarchicalDataTemplate x:Key="ContextMenuSubItemTemplate" ItemsSource="{Binding Children}">
                <MenuItem Command="{Binding Command}"
                          Header="{Binding DisplayName}"
                          ItemContainerTemplateSelector="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=ItemContainerTemplateSelector}"
                          ItemsSource="{Binding Children}"
                          UsesItemContainerTemplate="True" />
            </HierarchicalDataTemplate>
            <DataTemplate x:Key="ContextMenuSeparatorTemplate">
                <Separator />
            </DataTemplate>

            <!--  SettingsUX styles & templates  -->
            <Style x:Key="HeadingText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Margin" Value="12,24,12,12" />
            </Style>
            <Style x:Key="BodyText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="12,6" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="BodySubText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="12,6" />
                <Setter Property="Theme:Brush.Foreground" Value="GrayText" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="14,0" />
                <Setter Property="Margin" Value="12" />
                <Setter Property="Height" Value="32" />
                <Setter Property="MinWidth" Value="90" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
                <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseHigh" />
                <Setter Property="Theme:Brush.BorderBrush" Value="Transparent" />
                <Setter Property="Theme:Brush.Background" Value="Theme={Theme}BaseLow" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                <Border Padding="{TemplateBinding Padding}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <TextBlock HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               Foreground="{TemplateBinding Foreground}"
                                               Text="{TemplateBinding Content}" />
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Theme:Brush.BorderBrush" Value="Theme={Theme}BaseMediumLow, HighContrast=ControlText" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Theme:Brush.Background" Value="Theme={Theme}BaseMediumLow" />
                        <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseHigh" />
                        <Setter Property="Theme:Brush.BorderBrush" Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="8,0,0,0" />
                <Setter Property="Margin" Value="12" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.ColumnSpan="2"
                                           Margin="0"
                                           Style="{StaticResource BodyText}"
                                           Text="{TemplateBinding Content}" />
                                <Grid Grid.Row="1">
                                    <Grid x:Name="checkBoxBorder"
                                          Width="44"
                                          Height="20"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center">
                                        <Rectangle x:Name="OuterBorder"
                                                   Width="44"
                                                   Height="20"
                                                   Theme:Brush.Fill="Theme=Background"
                                                   Theme:Brush.Stroke="Text"
                                                   RadiusX="10"
                                                   RadiusY="10"
                                                   StrokeThickness="2" />
                                        <Grid x:Name="SwitchKnob"
                                              Width="20"
                                              Height="20"
                                              HorizontalAlignment="Left">
                                            <Ellipse x:Name="SwitchKnobEllipse"
                                                     Width="10"
                                                     Height="10"
                                                     Theme:Brush.Fill="Text" />
                                        </Grid>
                                    </Grid>
                                </Grid>

                                <Border Grid.Row="1" Grid.Column="1">
                                    <TextBlock x:Name="OnOffText"
                                               Margin="12"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"
                                               Style="{DynamicResource BodyText}"
                                               Text="{x:Static resx:Resources.ToggleSwitchOffText}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="SwitchKnob" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="SwitchKnobEllipse" Property="Theme:Brush.Fill" Value="Dark=Text, Light=Background" />
                                    <Setter TargetName="OuterBorder" Property="Theme:Brush.Fill" Value="SystemAccent" />
                                    <Setter TargetName="OuterBorder" Property="Theme:Brush.Stroke" Value="SystemAccent" />
                                    <Setter TargetName="OnOffText" Property="Text" Value="{x:Static resx:Resources.ToggleSwitchOnText}" />
                                </Trigger>

                                <!--
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="Transparent" />
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Theme={Theme}BaseHigh, HighContrast=Highlight" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="Light=LightBaseMediumHigh, Dark=DarkBaseMedium" />
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Light=LightBaseMediumHigh, Dark=DarkBaseMedium, HighContrast=Highlight" />
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="SystemAccent" />
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Light=LightBaseHigh, Dark=DarkBaseHigh, HighContrast=Highlight" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="SystemAccent" />
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Light=LightBaseHigh, Dark=DarkBaseHigh, HighContrast=Highlight" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                -->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LegacyCheckbox" TargetType="{x:Type CheckBox}">
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="8,0,0,0" />
                <Setter Property="Margin" Value="12" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot"
                                  Background="Transparent"
                                  SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder"
                                        Width="20"
                                        Height="20"
                                        Margin="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Theme:Brush.Background="Transparent"
                                        Theme:Brush.BorderBrush="Theme={Theme}BaseMediumHigh, HighContrast=Highlight"
                                        BorderThickness="2">
                                    <TextBlock x:Name="optionMark"
                                               FontFamily="Segoe MDL2 Assets"
                                               FontSize="16"
                                               Foreground="White"
                                               Opacity="0"
                                               SnapsToDevicePixels="False"
                                               Text="&#xE0E7;" />
                                </Border>
                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="Transparent" />
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Theme={Theme}BaseHigh, HighContrast=Highlight" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="Light=LightBaseMediumHigh, Dark=DarkBaseMedium" />
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Light=LightBaseMediumHigh, Dark=DarkBaseMedium, HighContrast=Highlight" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="SystemAccent" />
                                    <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="SystemAccent" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="SystemAccent" />
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Light=LightBaseHigh, Dark=DarkBaseHigh, HighContrast=Highlight" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.Background" Value="SystemAccent" />
                                        <Setter TargetName="checkBoxBorder" Property="Theme:Brush.BorderBrush" Value="Light=LightBaseHigh, Dark=DarkBaseHigh, HighContrast=Highlight" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HyperlinkBlock" TargetType="TextBlock">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Margin" Value="12,12,12,6" />
            </Style>
            <Style TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Theme:Brush.Foreground" Value="Theme={Theme}BaseMedium" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Theme:Brush.Foreground" Value="Theme=SystemAccent" />
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource LargeWindows10FocusVisualStyle}" />
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Theme:Brush.Background" Value="Light=LightChromeWhite/0.4, Dark=DarkChromeBlackMediumLow" />
                <Setter Property="Theme:Brush.BorderBrush" Value="Light=LightChromeBlackMediumLow, Dark=DarkChromeHigh" />
                <Setter Property="Theme:Brush.Foreground" Value="Light=Text, Dark=Text" />
                <Setter Property="Theme:Brush.SelectionBrush" Value="SystemAccent" />
                <Setter Property="Theme:Brush.CaretBrush" Value="ApplicationTextLightTheme" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="4" />
                <Setter Property="MinWidth" Value="140" />
                <Setter Property="Margin" Value="12" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="True" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border"
                                    Theme:Brush.Background="{TemplateBinding Theme:Brush.Background}"
                                    Theme:Brush.BorderBrush="{TemplateBinding Theme:Brush.BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Theme:Brush.Foreground="{TemplateBinding Theme:Brush.Foreground}"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Theme:Brush.BorderBrush" Value="Light=LightChromeBlackMedium, Dark=ControlDarkSelectBorderRest" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter TargetName="border" Property="Theme:Brush.Background" Value="Theme=ApplicationBackgroundLightTheme" />
                                    <Setter Property="Theme:Brush.Foreground" Value="Theme=ApplicationTextLightTheme" />
                                    <Setter TargetName="border" Property="Theme:Brush.BorderBrush" Value="SystemAccent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="VerticalContentAlignment" Value="Top" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Padding" Value="0,12,12,12" />
                <Setter Property="Margin" Value="0,0,24,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Name="root" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid>
                                    <Border Width="40"
                                            Height="40"
                                            Margin="12"
                                            Theme:Brush.Background="Light=LightBaseLow, Dark=Transparent"
                                            Theme:Brush.BorderBrush="Light=Transparent, Dark=Text"
                                            BorderThickness="2">
                                        <TextBlock HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Theme:Brush.Foreground="Light=Text, Dark=ControlDarkButtonTextDisabled"
                                                   FontSize="15"
                                                   FontWeight="SemiBold"
                                                   Style="{StaticResource GlyphTextBlockStyle}"
                                                   Text="&#xE109;" />
                                    </Border>

                                </Grid>

                                <ContentPresenter x:Name="contentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="root" Property="Theme:Brush.Background" Value="Theme={Theme}ListLow, HighContrast=Highlight" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="root" Property="Theme:Brush.Background" Value="Theme={Theme}ListMedium, HighContrast=Highlight" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="InvisibleButtonStyle" TargetType="Button">
                <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Theme:Brush.Foreground" Value="Text" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Margin="0,-1,0,0"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ListLow, HighContrast=Highlight" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ListMedium, HighContrast=Highlight" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ToolbarButtonStyle"
                   BasedOn="{StaticResource InvisibleButtonStyle}"
                   TargetType="Button">
                <Setter Property="Width" Value="48" />
                <Setter Property="Height" Value="48" />
            </Style>

            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="border"
                                    Theme:Brush.Background="Theme={Theme}ChromeMedium"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Theme:Brush.Background" Value="Theme={Theme}ChromeHigh" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Theme:Brush.Background" Value="Theme={Theme}ChromeDisabledLow" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid>
                                <Rectangle x:Name="rectangle"
                                           Width="2"
                                           Margin="0,0,1,0"
                                           HorizontalAlignment="Right"
                                           Theme:Brush.Fill="Theme={Theme}BaseMediumLow"
                                           SnapsToDevicePixels="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="rectangle" Property="Theme:Brush.Fill" Value="Theme={Theme}ChromeHigh" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter TargetName="rectangle" Property="Theme:Brush.Fill" Value="Theme={Theme}ChromeDisabledLow" />
                                </Trigger>
                                <Trigger Property="Tag" Value="True">

                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="rectangle"
                                                                 Storyboard.TargetProperty="Width"
                                                                 To="16"
                                                                 Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Width">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="16" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4.1" Value="2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                    <Setter TargetName="rectangle" Property="Margin" Value="0" />
                                    <Setter TargetName="rectangle" Property="HorizontalAlignment" Value="Stretch" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Theme:Brush.Background" Value="Theme={Theme}ChromeMedium" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Margin" Value="-16,0,0,0" />
                <Setter Property="Width" Value="16" />
                <Setter Property="MinWidth" Value="16" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                </Grid.RowDefinitions>
                                <Border x:Name="Background"
                                        Grid.Row="1"
                                        Theme:Brush.Background="{TemplateBinding Theme:Brush.Background}"
                                        BorderThickness="0"
                                        Opacity="0" />
                                <RepeatButton x:Name="PART_LineUpButton"
                                              Command="{x:Static ScrollBar.LineUpCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Opacity="0"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock x:Name="ArrowTop"
                                                   Theme:Brush.Foreground="Theme=ApplicationText{Theme}Theme"
                                                   FontSize="7"
                                                   Style="{StaticResource GlyphTextBlockStyle}"
                                                   Text="&#xE96D;" />
                                    </Border>

                                </RepeatButton>
                                <Track x:Name="PART_Track"
                                       Grid.Row="1"
                                       IsDirectionReversed="True"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource ScrollBarThumbVertical}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineDownButton"
                                              Grid.Row="2"
                                              Command="{x:Static ScrollBar.LineDownCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Opacity="0"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock x:Name="ArrowBottom"
                                                   Theme:Brush.Foreground="Theme=ApplicationText{Theme}Theme"
                                                   FontSize="7"
                                                   Style="{StaticResource GlyphTextBlockStyle}"
                                                   Text="&#xE96E;" />
                                    </Border>
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=UseDynamicScrollbars}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Thumb" Property="Tag" Value="True" />
                                    <Setter TargetName="PART_LineUpButton" Property="Opacity" Value="1" />
                                    <Setter TargetName="PART_LineDownButton" Property="Opacity" Value="1" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=Bg}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="Thumb" Property="Tag" Value="True" />
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="PART_LineUpButton"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.1" />
                                                <DoubleAnimation Storyboard.TargetName="PART_LineDownButton"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.1" />
                                                <DoubleAnimation Storyboard.TargetName="Background"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_LineUpButton" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4.1" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_LineDownButton" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4.1" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4" Value="1" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:4.1" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={StaticResource ThemeManager}, Path=UseDynamicScrollbars}" Value="True" />
                                        <Condition Binding="{Binding IsMouseOver, ElementName=Bg}" Value="False" />
                                    </MultiDataTrigger.Conditions>

                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowBottom" Property="Theme:Brush.Foreground" Value="Dark=ApplicationTextLightTheme, Light=ApplicationTextDarkTheme" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowTop" Property="Theme:Brush.Foreground" Value="Dark=ApplicationTextLightTheme, Light=ApplicationTextDarkTheme" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowBottom" Property="Theme:Brush.Foreground" Value="Theme=ApplicationText{Theme}Theme" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="True" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowTop" Property="Theme:Brush.Foreground" Value="Theme=ApplicationText{Theme}Theme" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ViewModel templates  -->
            <DataTemplate DataType="{x:Type vm:AppItemViewModel}">
                <views:AppItemView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:TemporaryAppItemViewModel}">
                <views:AppItemView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:FocusedAppItemViewModel}">
                <views:ModalDialogChrome>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ListView Margin="{StaticResource VolumeAppListMargin}"
                                  VerticalAlignment="Center"
                                  FocusVisualStyle="{x:Null}"
                                  ItemsSource="{Binding App.ChildApps, Mode=OneWay}"
                                  ScrollViewer.CanContentScroll="True"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" />

                        <ItemsControl Grid.Row="1" ItemsSource="{Binding Addons}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Grid>
                </views:ModalDialogChrome>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:FocusedDeviceViewModel}">
                <views:ModalDialogChrome>
                    <ItemsControl ItemsSource="{Binding Addons}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </views:ModalDialogChrome>
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:HotkeyViewModel}">

                <TextBox GotKeyboardFocus="{Event:Binding OnGotFocus}"
                         LostKeyboardFocus="{Event:Binding OnLostFocus}"
                         PreviewKeyDown="{Event:Binding OnPreviewKeyDown}"
                         Text="{Binding HotkeyText, UpdateSourceTrigger=PropertyChanged}" />
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>