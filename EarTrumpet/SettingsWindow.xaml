<Window x:Class="EarTrumpet.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        xmlns:uc="clr-namespace:EarTrumpet.UserControls"
        xmlns:mock="clr-namespace:EarTrumpet.ViewModels.Mocks"
        mc:Ignorable="d"
        Name="WindowRoot"
        WindowStyle="None"
        Icon="Tray.ico"
        ShowInTaskbar="True"
        AllowsTransparency="True"
        Foreground="{DynamicResource WindowForeground}"
        Background="Black"
        BorderThickness="1"
        Height="500"
        MinWidth="600"
        Width="600">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="31"
                      ResizeBorderThickness="4" />
    </WindowChrome.WindowChrome>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ActiveBorder}" />
            <Style.Triggers>
                <Trigger Property="IsActive"
                         Value="false">
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Style TargetType="Window">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ActiveBorder}" />
            <Style.Triggers>
                <Trigger Property="IsActive"
                         Value="false">
                    <Setter Property="BorderBrush"
                            Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid d:DataContext="{d:DesignInstance Type=mock:SettingsViewModelMock, IsDesignTimeCreatable=True}" Background="{DynamicResource WindowBackground}">
        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock TextAlignment="Left"
                           Padding="20, 8, 20, 8"
                           Text="{Binding ElementName=WindowRoot,Path=Title}" />
                <Button x:Name="CloseButton"
                        Grid.Column="1"
                        Content="&#xE8BB;"
                        Style="{DynamicResource CloseButtonStyle}"
                        Click="CloseButton_Click" />
            </Grid>
            <StackPanel Orientation="Horizontal"
                        DockPanel.Dock="Bottom" />
            <StackPanel Orientation="Vertical"
                        Margin="8">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock VerticalAlignment="Center"
                               Text="{x:Static resx:Resources.HotkeyDescriptionText}"
                               Margin="4,4,0,4" />
                    <Button Click="HotkeySelect_Click"
                            FontSize="12"
                            Margin="2,0,0,0"
                            Style="{StaticResource SlimButton}"
                            Foreground="{Binding ElementName=WindowRoot,Path=Foreground}"
                            Content="{Binding HotkeyText}" />
                </StackPanel>
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>
