<Window x:Class="EarTrumpet.Views.FullWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:resx="clr-namespace:EarTrumpet.Properties"
        xmlns:views="clr-namespace:EarTrumpet.Views"
        Name="WindowRoot"
        MinWidth="300"
        MinHeight="300"
        SizeToContent="WidthAndHeight"
        Style="{StaticResource DialogWindowStyle}"
        WindowStartupLocation="CenterOwner">
    <Window.Resources>

        <Style x:Key="DeviceHeaderGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{DynamicResource FullWindowDeviceBackground}" />
        </Style>

        <Style x:Key="VolumeControlPopupBorder"
               BasedOn="{StaticResource BaseVolumeControlPopupBorder}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource NormalWindowBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorder}" />
        </Style>

        <Style x:Key="VirtualTitleBarBorderStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarBorderStyle}"
               TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource FullWindowDeviceBackground}" />
        </Style>

        <Style x:Key="VirtualTitleBarButtonStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarButtonStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{DynamicResource ButtonBorderHover}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PerThemeGlyphTextBlockStyle"
               BasedOn="{StaticResource GlyphTextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="VirtualTitleBarTextStyle"
               BasedOn="{StaticResource BaseVirtualTitleBarTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="PerThemeTextBlockStyle"
               BasedOn="{StaticResource TextBlockStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="DeviceVolumeTextStyle"
               BasedOn="{StaticResource BaseDeviceVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="AppVolumeTextStyle"
               BasedOn="{StaticResource BaseAppVolumeTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <Style x:Key="DeviceTitleTextStyle"
               BasedOn="{StaticResource BaseDeviceTitleTextStyle}"
               TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource NormalWindowForeground}" />
        </Style>

        <ControlTemplate x:Key="VolumeSliderTemplate" TargetType="{x:Type Slider}">
            <Grid>
                <Border Name="TrackBackground" Height="2" />

                <Track Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Name="SliderLeft"
                                      Command="Slider.DecreaseLarge"
                                      Foreground="{DynamicResource ControlSliderTrackFillRest}"
                                      Style="{StaticResource SliderButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Name="SliderThumb"
                               Foreground="{DynamicResource ControlSliderTrackFillRest}"
                               Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Name="SliderRight"
                                      Command="Slider.IncreaseLarge"
                                      Foreground="{DynamicResource ControlSliderTrackBackgroundRest}"
                                      Style="{StaticResource SliderButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <Border Name="PeakMeter"
                        Width="78"
                        Height="2"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource PeakMeterBackground}" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition GeneratedDuration="0" To="Normal" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderThumb" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ControlSliderThumbHover}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SliderThumb" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource ControlSliderThumbHover}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="VolumeSliderStyle"
               BasedOn="{StaticResource BaseVolumeSliderStyle}"
               TargetType="{x:Type Slider}">
            <Setter Property="Template" Value="{DynamicResource VolumeSliderTemplate}" />
        </Style>
    </Window.Resources>

    <DockPanel x:Name="ContentRoot">
        <DockPanel DockPanel.Dock="Top">
            <Button x:Name="CloseButton"
                    Click="CloseButton_Click"
                    Content="&#xE8BB;"
                    DockPanel.Dock="Right"
                    Style="{DynamicResource CloseButtonStyle}" />
            <TextBlock Padding="20,8,20,8"
                       DockPanel.Dock="Left"
                       Text="{Binding ElementName=WindowRoot, Path=Title}"
                       TextAlignment="Left" />
        </DockPanel>
        <Grid>
            <ScrollViewer x:Name="BaseVisual"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                <ItemsControl IsTabStop="False" ItemsSource="{Binding AllDevices}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <ItemContainerTemplate>
                            <views:DeviceAndAppsControl Width="{StaticResource WindowAndItemSize}"
                                                        AppExpanded="DeviceAndAppsControl_AppExpanded"
                                                        Device="{Binding}" />
                        </ItemContainerTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <Border Name="LightDismissBorder"
                    Background="{DynamicResource NormalWindowBackground}"
                    PreviewMouseDown="LightDismissBorder_PreviewMouseDown"
                    Visibility="Collapsed">
                <Border.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsShowingModalDialog}" Value="true">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0"
                                                             To="1"
                                                             Duration="00:00:00.15" />

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="1"
                                                             To="0"
                                                             Duration="00:00:00.15" />

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border Margin="0,0,0,14" Opacity="0.8">
                    <Border.Effect>
                        <BlurEffect KernelType="Gaussian"
                                    Radius="2"
                                    RenderingBias="Performance" />
                    </Border.Effect>
                    <Border.Background>
                        <VisualBrush AlignmentX="Left"
                                     AlignmentY="Top"
                                     Stretch="UniformToFill"
                                     Visual="{Binding ElementName=BaseVisual}" />
                    </Border.Background>
                    <Border.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsShowingModalDialog}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Effect.Radius"
                                                                 From="2"
                                                                 To="{StaticResource WindowBlurRadius}"
                                                                 Duration="00:00:00.15" />
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 From="0"
                                                                 To="1"
                                                                 Duration="00:00:00.15" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Effect.Radius"
                                                                 From="{StaticResource WindowBlurRadius}"
                                                                 To="0"
                                                                 Duration="00:00:00.15" />
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                 From="1"
                                                                 To="0"
                                                                 Duration="00:00:00.15" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Border>

            <views:VolumeControlPopup x:Name="AppPopup" DataContext="{x:Null}" />
        </Grid>
    </DockPanel>

</Window>
