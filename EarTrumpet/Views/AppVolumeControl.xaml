<UserControl x:Class="EarTrumpet.UserControls.AppVolumeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ext="clr-namespace:EarTrumpet.Extensions"
             xmlns:local="clr-namespace:EarTrumpet.UserControls"
             Height="{StaticResource AppItemCellHeight}"
             IsTabStop="False">
    <UserControl.Resources>

        <ext:VisibleWhenNonZeroConverter x:Key="nonZeroConverter" />

        <Style x:Key="BaseOverlayButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Opacity" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#11FFFFFF" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="#66FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid Name="GridRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource IconCellWidth}" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="{StaticResource VolumeCellWidth}" />
        </Grid.ColumnDefinitions>

        <Grid Name="RevealButtonsBorder"
              Grid.Column="0"
              Margin="{StaticResource DeviceOrAppIconMargin}"
              Background="Transparent">

            <Border Width="{StaticResource AppIconSize}"
                    Height="{StaticResource AppIconSize}"
                    HorizontalAlignment="Center"
                    Background="{Binding App.Background, Mode=OneTime}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=RevealButtonsBorder, Path=IsMouseOver}" Value="true">
                                <Setter Property="Opacity" Value="{Binding ElementName=RevealButtonsBorder, Path=IsMouseOver, Converter={StaticResource opacityConverter}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding App.IsMuted}" Value="true">
                                <Setter Property="Opacity" Value="{Binding App.IsMuted, Converter={StaticResource opacityConverter}}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Image Width="{StaticResource AppIconSize}"
                           Height="{StaticResource AppIconSize}"
                           Source="{Binding App.Icon, Mode=OneTime}"
                           Stretch="Fill" />
                    <TextBlock HorizontalAlignment="Center"
                               FontSize="16"
                               FontWeight="Bold"
                               Text="{Binding App.IconText}"
                               Visibility="Collapsed">
                        <TextBlock.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding App.Icon}" Value="{x:Null}">
                                        <Setter Property="TextBlock.Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Grid Margin="0,0,-1,-1"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Bottom"
                          Visibility="{Binding App.ChildApps.Count, Converter={StaticResource nonZeroConverter}}">
                        <Canvas>
                            <Ellipse Style="{DynamicResource BadgeEllipseStyle}" />
                        </Canvas>

                        <TextBlock Style="{DynamicResource BadgeTextStyle}" Text="..." />
                    </Grid>
                </Grid>
            </Border>

            <Button Name="MuteButton"
                    Width="{StaticResource AppIconSize}"
                    Height="{StaticResource AppIconSize}"
                    Click="MuteButton_Click">
                <Button.Style>
                    <Style BasedOn="{StaticResource BaseOverlayButton}" TargetType="Button">
                        <Style.Triggers>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=RevealButtonsBorder, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding App.IsExpanded}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Margin" Value="0,-10,0,0" />
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                            <DataTrigger Binding="{Binding ElementName=RevealButtonsBorder, Path=IsMouseOver}" Value="true">
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding App.IsMuted}" Value="true">
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <TextBlock FontSize="24"
                               Opacity="0.75"
                               Style="{DynamicResource PerThemeGlyphTextBlockStyle}"
                               Text="&#xE74F;" />
                </Button.Content>
            </Button>

            <Button Name="MoreButton"
                    Width="{StaticResource AppIconSize}"
                    Height="14"
                    Margin="0,28,0,0"
                    VerticalContentAlignment="Center"
                    Click="MoreButton_Click">
                <Button.Style>
                    <Style BasedOn="{StaticResource BaseOverlayButton}" TargetType="Button">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=RevealButtonsBorder, Path=IsMouseOver}" Value="True" />
                                    <Condition Binding="{Binding App.IsExpanded}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)"
                                                             From="0"
                                                             To="1"
                                                             Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)"
                                                             From="1"
                                                             To="0"
                                                             Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>
                    <TextBlock Margin="0,-14,0,0"
                               FontSize="24"
                               IsHitTestVisible="False"
                               Style="{DynamicResource PerThemeTextBlockStyle}"
                               Text="..." />
                </Button.Content>
            </Button>
        </Grid>

        <local:VolumeSlider Grid.Column="1"
                            Opacity="{Binding App.IsMuted, Converter={StaticResource opacityConverter}}"
                            PeakValue="{Binding App.PeakValue}"
                            Style="{DynamicResource VolumeSliderStyle}"
                            Volume="{Binding App.Volume}"
                            Value="{Binding App.Volume, Mode=TwoWay}" />

        <TextBlock Grid.Column="2"
                   Opacity="{Binding App.IsMuted, Converter={StaticResource opacityConverter}}"
                   Style="{DynamicResource AppVolumeTextStyle}"
                   Text="{Binding App.Volume, Mode=OneWay}" />
    </Grid>
</UserControl>
