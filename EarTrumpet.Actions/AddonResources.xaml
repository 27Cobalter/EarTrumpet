<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:actions="clr-namespace:EarTrumpet_Actions.DataModel.Actions"
                    xmlns:conditions="clr-namespace:EarTrumpet_Actions.DataModel.Conditions"
                    xmlns:conv="clr-namespace:EarTrumpet.UI.Converters;assembly=EarTrumpet"
                    xmlns:ctl="clr-namespace:EarTrumpet.UI.Controls;assembly=EarTrumpet"
                    xmlns:cvm="clr-namespace:EarTrumpet_Actions.ViewModel.Conditions"
                    xmlns:dm="clr-namespace:EarTrumpet_Actions.DataModel"
                    xmlns:etctl="clr-namespace:EarTrumpet_Actions.Controls"
                    xmlns:local="clr-namespace:EarTrumpet_Actions"
                    xmlns:resx="clr-namespace:EarTrumpet_Actions.Properties"
                    xmlns:svc="clr-namespace:EarTrumpet.UI.Services;assembly=EarTrumpet"
                    xmlns:tvm="clr-namespace:EarTrumpet_Actions.ViewModel.Triggers"
                    xmlns:ui="clr-namespace:EarTrumpet.UI;assembly=EarTrumpet"
                    xmlns:vm="clr-namespace:EarTrumpet_Actions.ViewModel">

    <conv:InvertableVisibilityConverter x:Key="addonVisConverter" />

    <ui:MenuItemTemplateSelector x:Key="MenuTemplateSelector" Theme="LightOrDark" />

    <Popup x:Key="ActionsPopup"
           MinWidth="200"
           AllowsTransparency="False"
           Placement="Right"
           PopupAnimation="None"
           StaysOpen="False">

        <Border x:Name="SubmenuBorder"
                Background="{DynamicResource ContextMenuBackground}"
                BorderBrush="{DynamicResource ContextMenuBorder}"
                BorderThickness="1"
                SnapsToDevicePixels="True">
            <Grid Margin="12">
                <ContentControl Content="{Binding}" />
            </Grid>
        </Border>
    </Popup>

    <Style x:Key="HeaderAddButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="root" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Rectangle Width="32"
                                       Height="32"
                                       Margin="12"
                                       Fill="{DynamicResource ButtonBackground}" />

                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       FontSize="12"
                                       Text="&#xE109;" />
                        </Grid>

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="root" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource Windows10FocusVisualStyle}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource LightOrDark_Text}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="root" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Rectangle Width="32"
                                       Height="32"
                                       Margin="12"
                                       Fill="{DynamicResource ButtonBackground}" />

                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontFamily="Segoe MDL2 Assets"
                                       FontSize="12"
                                       Text="&#xE108;" />
                        </Grid>

                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="root" Property="Background" Value="{DynamicResource ContextMenuItemBackgroundHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="PartListItemTemplate" DataType="vm:PartViewModel">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Margin="0,-9,0,0"
                       IsHitTestVisible="False"
                       Style="{DynamicResource AdditionalTextStyle}"
                       Text="{Binding AdditionalText}" />

            <Button Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding Remove}"
                    CommandParameter="{Binding}"
                    Style="{StaticResource RemoveButtonStyle}" />

            <etctl:LinkedTextBlock HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   FormatText="{Binding CurrentDescription}" />

        </Grid>
    </DataTemplate>

    <Style x:Key="ThinListStyle" TargetType="{x:Type ListView}">
        <Setter Property="Margin" Value="6,0,0,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Background="{TemplateBinding Background}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TablePromptTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource LightOrDark_SecondaryText}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="AdditionalTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource LightOrDark_SecondaryText}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <DataTemplate DataType="{x:Type vm:EarTrumpetActionViewModel}">
        <Grid MinWidth="400"
              MinHeight="400"
              Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBox FontSize="24" Text="{Binding DisplayName, Mode=TwoWay}" />

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock FontSize="20" Text="{x:Static resx:Resources.TriggerVerbText}" />

                <etctl:MenuButton Grid.Column="1"
                                  HorizontalAlignment="Right"
                                  Style="{DynamicResource HeaderAddButtonStyle}">
                    <etctl:MenuButton.ContextMenu>
                        <ContextMenu ItemContainerTemplateSelector="{DynamicResource MenuTemplateSelector}"
                                     ItemsSource="{Binding NewTriggers}"
                                     UsesItemContainerTemplate="True" />
                    </etctl:MenuButton.ContextMenu>
                </etctl:MenuButton>

                <Rectangle Grid.Row="1"
                           Stroke="{DynamicResource LightOrDark_SecondaryText}"
                           StrokeThickness="1" />
            </Grid>

            <ListView Grid.Row="2"
                      IsSynchronizedWithCurrentItem="True"
                      ItemTemplate="{StaticResource PartListItemTemplate}"
                      ItemsSource="{Binding Triggers}"
                      Style="{DynamicResource ThinListStyle}" />

            <Grid Grid.Row="3">
                <TextBlock Text="{x:Static resx:Resources.RequiredText}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource TablePromptTextStyle}" TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Triggers.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock FontSize="20" Text="{x:Static resx:Resources.ConditionVerbText}" />

                <etctl:MenuButton Grid.Column="1"
                                  HorizontalAlignment="Right"
                                  Style="{DynamicResource HeaderAddButtonStyle}">
                    <etctl:MenuButton.ContextMenu>
                        <ContextMenu ItemContainerTemplateSelector="{DynamicResource MenuTemplateSelector}"
                                     ItemsSource="{Binding NewConditions}"
                                     UsesItemContainerTemplate="True" />
                    </etctl:MenuButton.ContextMenu>
                </etctl:MenuButton>

                <Rectangle Grid.Row="1"
                           Stroke="{DynamicResource LightOrDark_SecondaryText}"
                           StrokeThickness="1" />
            </Grid>

            <ListView Grid.Row="5"
                      IsSynchronizedWithCurrentItem="True"
                      ItemTemplate="{StaticResource PartListItemTemplate}"
                      ItemsSource="{Binding Conditions}"
                      Style="{DynamicResource ThinListStyle}" />

            <Grid Grid.Row="6">
                <TextBlock Text="{x:Static resx:Resources.OptionalText}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource TablePromptTextStyle}" TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Conditions.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <Grid Grid.Row="7">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock FontSize="20" Text="{x:Static resx:Resources.ActionVerbText}" />

                <etctl:MenuButton Grid.Column="1"
                                  HorizontalAlignment="Right"
                                  Style="{DynamicResource HeaderAddButtonStyle}">
                    <etctl:MenuButton.ContextMenu>
                        <ContextMenu ItemContainerTemplateSelector="{DynamicResource MenuTemplateSelector}"
                                     ItemsSource="{Binding NewActions}"
                                     UsesItemContainerTemplate="True" />
                    </etctl:MenuButton.ContextMenu>
                </etctl:MenuButton>

                <Rectangle Grid.Row="1"
                           Stroke="{DynamicResource LightOrDark_SecondaryText}"
                           StrokeThickness="1" />
            </Grid>

            <ListView Grid.Row="8"
                      IsSynchronizedWithCurrentItem="True"
                      ItemTemplate="{StaticResource PartListItemTemplate}"
                      ItemsSource="{Binding Actions}"
                      Style="{DynamicResource ThinListStyle}" />

            <Grid Grid.Row="9">
                <TextBlock Text="{x:Static resx:Resources.RequiredText}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource TablePromptTextStyle}" TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Actions.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>

            <Grid Grid.Row="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="1"
                        Margin="0,12,0,0"
                        HorizontalAlignment="Right"
                        Command="{Binding Save}"
                        Content="Save"
                        IsEnabled="False" />
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ActionsEditorViewModel}">
        <StackPanel MinWidth="400"
                    MinHeight="400"
                    Margin="12"
                    Orientation="Vertical">
            <TextBlock Margin="6"
                       Style="{DynamicResource HeadingText}"
                       Text="{x:Static resx:Resources.MyActionsText}" />
            <ListView ItemsSource="{Binding Actions}"
                      SelectedItem="{Binding SelectedAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectionMode="Single"
                      Style="{DynamicResource SettingsListView}">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:EarTrumpetActionViewModel}">
                        <Grid Margin="12">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Button Grid.Row="1"
                                    Grid.Column="1"
                                    Command="{Binding Open}"
                                    Content="{x:Static resx:Resources.EditText}"
                                    Visibility="{Binding IsExpanded, Converter={StaticResource visConverter}, ConverterParameter=Normal}" />

                            <Button Grid.Row="1"
                                    Grid.Column="2"
                                    Command="{Binding Remove}"
                                    Content="{x:Static resx:Resources.RemoveText}"
                                    Visibility="{Binding IsExpanded, Converter={StaticResource visConverter}, ConverterParameter=Normal}" />

                            <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Button Margin="0,6,0,0"
                    Command="{Binding New}"
                    Content="{x:Static resx:Resources.NewActionText}"
                    Style="{DynamicResource AddButtonStyle}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:VolumeViewModel}">
        <ctl:VolumeSlider Maximum="100"
                          Minimum="0"
                          Style="{StaticResource {x:Type Slider}}"
                          Value="{Binding Volume, Mode=TwoWay}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:AppViewModel}">
        <ComboBox IsSynchronizedWithCurrentItem="True"
                  ItemsSource="{Binding All}"
                  SelectedItem="{Binding Selected, Mode=TwoWay}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:DeviceViewModel}">
        <ComboBox IsSynchronizedWithCurrentItem="True"
                  ItemsSource="{Binding All}"
                  SelectedItem="{Binding Selected, Mode=TwoWay}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:OptionViewModel}">
        <ComboBox IsSynchronizedWithCurrentItem="True"
                  ItemsSource="{Binding All}"
                  SelectedItem="{Binding Selected, Mode=TwoWay}" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:TextViewModel}">
        <Grid Margin="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock Text="{Binding PromptText}" />
            <TextBox Grid.Row="1" Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>